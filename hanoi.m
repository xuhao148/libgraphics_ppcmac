#include <stdio.h>#include <stdlib.h>#include "hanoi.h"Tower      g_towers[3];int        g_disc_count; FlyingDisc g_flying_disc;void ResetMoveStack(int n, int a, int b);void InitTower(int n){	int j;	if( n<1 ) n = 1;	if( n > MAX_DISC_COUNT ) {		printf("Too many disc to handle\n");		HandleError(0);	}	g_disc_count = n;	g_towers[0].discNum = n;	for( j = 0; j<n; j++ ) {		g_towers[0].discList[j] = j; 	}	g_towers[1].discNum = 0;	g_towers[2].discNum = 0;	ResetMoveStack(n,0,1); 	g_flying_disc.id = -1;}int OneStepHanoi(){	if( g_flying_disc.id >=0 ) {		g_flying_disc.time += GetHanoiTimeElapseSpeed();		if( g_flying_disc.time>=1 )		{			int tt = g_flying_disc.towerTo;			g_towers[tt].discList[ g_towers[tt].discNum ++ ] = g_flying_disc.id; 			g_flying_disc.id = -1;		}		return 1;	}	else if( FindNextMove() )	{		int ft = g_flying_disc.towerFrom;		g_towers[ft].discNum --; 		return 1;	}	return 0;	}static double time_elapse_speed = 0.02;void SetHanoiTimeElapseSpeed( double speed ){	time_elapse_speed = speed;}double GetHanoiTimeElapseSpeed(){	return time_elapse_speed;}void HandleError(int errorCode){	exit(errorCode);}